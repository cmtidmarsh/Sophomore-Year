1.
my answer: 
 charges 29.95 for 300 min
  	if min > 300 min
  		add 0.45 to charges
  			then multiply charges by 12.5 percent
 		return result/charges
  
  actual:
  	if so, the answer is 29 x 1.125 = 33.70
      if not,
        compute the difference: (number of minutes) -300.
        Multiply that difference by 0.45.
        add 29.95.
        Multiply the total by 1.125. That is the answer.
 

2. my answer: HELLO 
    

  actual: HELLO
          hello
          

3. my ansnwer: Mutator

  actual: An accessor- it doesn't modify the original string but returns a new string with uppercase letters.
 
4. my answer: You can access these by having the program return teh hours and minutes by printing them out.

   actual: you can only access them by invoking the methods of the Clock class.

5. my answer: public Car(int mpg), int add, int dis, int tank){
                this.mpg;
                this.dis;
                this.add;
                this.tank; }
                
  actual: Car myCar
          Car(mpg)
           addGas(amount)
           drive(distance)
           getGasLeft

6. my answer: They are similar

  actual: variables of both categories belong to methods-they come alive when the method is called, and they die when the method exits.
          They differ in their initialization. Parameter variables are initialized with the values supplied as arguments in the call; local variables
           must be explicitly initialized.

7. my answer: 0 because if n=10 then 10/10 = 1 % 10 = 0

  actual: It is the second-to-last digit of n. For example, if n is 1729, then n/10 is 172, and (n/10)%10 is 2.

8. my answer: The volme is 10.000

  actual: The total volume is 10

9. my answer: System.out.printf("Bottles: %d", bottles);
           System.out.printf("Cans: %8d", cans);
  
   actual: System.out.printf("Bottles: %d\n", bottles);
           System.out.printf("Cans: %8d\n", cans);

10. my answer:
    
    actual:

11. my answer: use an if statement. If (x==0 && y==0{return x,y}
    
    actual:

12. my answer: use an if-else statement. If (x==0 || y==0{return x,y} else{return 1}

    actual:

13. my answer: 

    actual:

14. my answer: 

    actual:

15. my answer: runtime error

    actual:

16. my answer: while the values of i is less than the value of n, then do the function in the loop. However, j & i are constantly inscreasing everytime
              the while loop goes through. The loop will stop once i>n.

    actual:

17. my answer: 11 numbers b/c it'll print out 10 9 8 7 6 5 4 3 2 1 0

    actual: 11 numbers: 10 9 8 7 6 5 4 3 2 1 0

18. my answer: 
    int i =10;
    for (i <=20){
    i = i+2;
    System.out.println(i);}

    actual:
    for (int i = 10; i <= 20; i = i + 2){
    System.out.println(i);}

19. my answer: 
    for (n>=1){
    n=n+n}
    return n

    actual:
    int sum = 0;
    for (int i = 1; i <= n; i++){
    sum = sum + 1; }

20. my answer: yes
  
    actual: Yes, the do loop
            do { body } while (condition);
            is equivalent to this while loop:
            boolean first = true;
            while (first || condition){
            body;
            first = false; }

21. my answer:
   do {
   sum = i + i;
   System.out.print(sum)} while (i != 0){return sum}

    actual:
    int x;
    int sum = 0;
    do {
    x = in.nextInt();
    sum = sum + x;}

22. my answer:

    actual: 
    int x = 0;
    int previous;
    do {
    previous = x;
    x = in.nextInt();
    sum = sum + x;}

23. my answer:

    actual:
    boolean found = false;
    int i = str.length() - 1;
    while (!found && i >= 0){
    char ch = str.charAt(i);
    if (ch == '') { found = true; }
    else { i--; }}

24. my answer: 2 and then an empty line

    actual:
    0123
    1234
    2345

25. my answer: for(int[] a = new int[]; a <=4, a++){
                for (int[] b = new int[]; b <=4, b++){
                System.out.print("[]");}

    actual:
    for (int i = 1; i <= 3; i++){
    for (int j = 1; j <= 4; j++){
    System.out.print("[}");}
    System.out.println(); }

26. my ansnwer: First you have to import the random package then decalre it like Random rand=random()
     then n.rand() >=0 && n.rand()<100.
    
    actual:

27. my answer:

     actual: values[0] = 10;
             values[9] = 10; or better:
             values[values.length - 1] = 10;

28. my answer: ArrayList<string> words = new ArrayList<string>

    actual:

29. my answer: If the variable has the value of 0 then the counter will increase by 1. If not, the loop will not perform.

30.

31.

32.

33.

34.

35.

36.

37.

38.

39.

40.

41.

42.

43.

44.

45.

46.

47.

48.

49.

50.

51.
